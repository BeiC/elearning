{
  "name": "lockit-forgot-password",
  "version": "1.0.0",
  "description": "forgot password middleware for lockit",
  "main": "index.js",
  "scripts": {
    "test": "grunt"
  },
  "author": {
    "name": "Mirco Zeiss",
    "email": "mirco.zeiss@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/zeMirco/lockit-forgot-account"
  },
  "keywords": [
    "lockit",
    "forgot",
    "password"
  ],
  "dependencies": {
    "node-uuid": "~1.4.1",
    "ms": "~0.6.2",
    "moment": "~2.5.0",
    "lockit-template-blank": "~0.0.1",
    "lockit-sendmail": "0.1.2",
    "couch-pwd": "0.0.1"
  },
  "devDependencies": {
    "express": "^4.0.0",
    "should": "~2.1.1",
    "supertest": "~0.8.2",
    "grunt-mocha-test": "~0.8.1",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt": "~0.4.2",
    "nano": "~4.2.1",
    "jade": "~1.0.0",
    "lockit-couchdb-adapter": "0.4.1",
    "lockit-utils": "0.3.0",
    "cookie": "~0.1.0",
    "static-favicon": "~1.0.0",
    "cookie-parser": "~1.0.1",
    "body-parser": "~1.0.0",
    "cookie-session": "~1.0.1",
    "errorhandler": "~1.0.0",
    "csurf": "^1.1.0"
  },
  "readme": "# Lockit forgot password\n\n[![Build Status](https://travis-ci.org/zeMirco/lockit-forgot-password.svg?branch=master)](https://travis-ci.org/zeMirco/lockit-forgot-password) [![NPM version](https://badge.fury.io/js/lockit-forgot-password.svg)](http://badge.fury.io/js/lockit-forgot-password)\n\nHelp users who forgot their passwords for your Express app. The module is part of [Lockit](https://github.com/zeMirco/lockit).\n\n## Installation\n\n`npm install lockit-forgot-password`\n\n```js\nvar ForgotPassword = require('lockit-forgot-password');\nvar lockitUtils = require('lockit-utils');\nvar config = require('./config.js');\n\nvar db = lockitUtils.getDatabase(config);\nvar adapter = require(db.adapter)(config);\n\nvar app = express();\n\n// express settings\n// ...\n// sessions are required - either cookie or some sort of db\napp.use(cookieParser());\napp.use(cookieSession({\n  secret: 'this is my super secret string'\n}));\n\n// create new ForgotPassword instance\nvar forgotPassword = new ForgotPassword(config, adapter);\n\n// use forgotPassword.router with your app\napp.use(forgotPassword.router);\n```\n\n## Configuration\n\nMore about configuration at [Lockit](https://github.com/zeMirco/lockit).\n\n## Features\n\n - allow password reset for users\n - input validation\n - link expiration times\n - user email verification via unique token\n - hash password using [pbkdf2](http://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2_password_salt_iterations_keylen_callback)\n - token format verification before database querying\n\n## Routes included\n\n - GET /forgot-password\n - POST /forgot-password\n - GET /forgot-password/:token\n - POST /forgot-password/:token\n\n## REST API\n\nIf you've set `exports.rest` in your `config.js` the module behaves as follows.\n\n - all routes have `/rest` prepended\n - `GET /rest/forgot-password` is `next()`ed and you can catch `/forgot-password` on the client\n - `POST /rest/forgot-password` stays the same but sends JSON\n - `GET /rest/forgot-password/:token` sends JSON and you can catch `/forgot-password/:token` on the client\n - `POST /rest/forgot-password/:token` sends JSON\n\n## Test\n\n`grunt`\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/zeMirco/lockit-forgot-account/issues"
  },
  "homepage": "https://github.com/zeMirco/lockit-forgot-account",
  "_id": "lockit-forgot-password@1.0.0",
  "_from": "lockit-forgot-password@1.0.0"
}
