{
  "name": "lockit-login",
  "version": "1.0.0",
  "description": "login and logout module for lockit",
  "main": "index.js",
  "scripts": {
    "test": "grunt"
  },
  "author": {
    "name": "Mirco Zeiss",
    "email": "mirco.zeiss@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/zeMirco/lockit-login"
  },
  "keywords": [
    "lockit",
    "login",
    "logout"
  ],
  "dependencies": {
    "ms": "~0.6.2",
    "moment": "~2.4.0",
    "lockit-utils": "0.3.0",
    "couch-pwd": "0.0.1",
    "express": "^4.0.0"
  },
  "devDependencies": {
    "supertest": "~0.8.2",
    "should": "~2.1.1",
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-mocha-test": "~0.8.1",
    "nano": "~4.1.1",
    "superagent": "~0.15.7",
    "jade": "~0.35.0",
    "lockit-couchdb-adapter": "0.4.1",
    "cookie": "~0.1.0",
    "static-favicon": "~1.0.0",
    "cookie-parser": "~1.0.1",
    "body-parser": "~1.0.0",
    "express-session": "~1.0.2",
    "cookie-session": "~1.0.1",
    "errorhandler": "~1.0.0",
    "csurf": "^1.1.0"
  },
  "readme": "# Lockit login\n\n[![Build Status](https://travis-ci.org/zeMirco/lockit-login.svg?branch=master)](https://travis-ci.org/zeMirco/lockit-login) [![NPM version](https://badge.fury.io/js/lockit-login.svg)](http://badge.fury.io/js/lockit-login)\n\nLog in users to your Express app. The module is part of [Lockit](https://github.com/zeMirco/lockit).\n\n## Installation\n\n`npm install lockit-login`\n\n```js\nvar Login = require('lockit-login');\nvar lockitUtils = require('lockit-utils');\nvar config = require('./config.js');\n\nvar db = lockitUtils.getDatabase(config);\nvar adapter = require(db.adapter)(config);\n\nvar app = express();\n\n// express settings\n// ...\n// sessions are required - either cookie or some sort of db\napp.use(cookieParser());\napp.use(cookieSession({\n  secret: 'this is my super secret string'\n}));\n\n// create new Login instance\nvar login = new Login(config, adapter);\n\n// use login.router with your app\napp.use(login.router);\n\n// listen to events [optional]\nlogin.on('login', function(user, res, target) {\n  res.send('Welcome ' + user.name);\n})\n```\n\n## Configuration\n\nMore about configuration at [Lockit](https://github.com/zeMirco/lockit).\n\n## Features\n\n - track failed log in attempts\n - lock account after too many failed login attempts\n - track time and ip of log ins\n - redirect unauthorized users to /login and save requested url to session\n - input validation\n - allow login with username and/or email\n\n## Routes included\n\n - GET /login\n - POST /login\n - GET /logout\n\n## REST API\n\nIf you've set `exports.rest` in your `config.js` the module behaves as follows.\n\n - all routes have `/rest` prepended\n - `GET /rest/login` is `next()`ed and you can catch `/login` on the client\n - `POST /rest/login` stays the same but sends JSON\n - `GET /rest/logout` sends JSON and you can catch `/logout` on the client\n\n## Test\n\n`grunt`\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/zeMirco/lockit-login/issues"
  },
  "homepage": "https://github.com/zeMirco/lockit-login",
  "_id": "lockit-login@1.0.0",
  "_from": "lockit-login@1.0.0"
}
